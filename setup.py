import time
from selenium.webdriver.firefox.firefox_binary import FirefoxBinary
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains

fstr="C:\\Program Files\\Firefox\\firefox.exe"
fgstr="E:\\APP Pack\\Network\\Firefox\\geckodriver.exe"

cstr="C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
cgstr="E:\\APP Pack\\Network\\Chrome\\chromedriver.exe"


#driver=webdriver.Chrome(cgstr)
#driver.get('i.qq.com')

driver=webdriver.Firefox(firefox_binary=fstr, executable_path=fgstr)
#driver.get("https://google.com")
#driver.execute_script('''window.open("http://baidu.com", "_blank");''')
driver.get("https://baidu.com")
driver.find_element_by_id("kw").send_keys("ruozhiba"+Keys.RETURN)
driver.execute_script('''window.open()''')
print(driver.window_handles)
print(driver.current_window_handle)
driver.switch_to.window(driver.window_handles[1])
driver.get("https://google.com")
print(driver.window_handles)
print(driver.current_window_handle)
driver.switch_to.window(driver.window_handles[0])
driver.close()
driver.switch_to.window(driver.window_handles[0])
print(driver.window_handles)
print(driver.current_window_handle)
driver.find_element_by_name("q").send_keys("弱智吧"+Keys.RETURN)
driver.find_element_by_tag_name('body').send_keys(Keys.CONTROL+'t')

# Appium


# unittest infrastructure
import unittest
import TestCase
from HTMLTestRunner import HTMLTestRunner

if __name__ == '__main__':
    suite1 = unittest.TestSuite()
    tests1 = [TestCase.Semantic("test_3"), TestCase.Semantic("test_1"), TestCase.Semantic("test_2"),
              TestCase.Semantic("test_4")]
    suite1.addTests(tests1)
    runner1 = unittest.TextTestRunner(verbosity=2)
    # runner1.run(suite1)
    suite2 = unittest.TestSuite()
    suite2.addTests(unittest.TestLoader().loadTestsFromName('TestCase.BaiduTest'))
    unittest.TextTestRunner(verbosity=2).run(suite2)
    # with open('ZGY.txt', 'w+') as f:
    #     runner2 = unittest.TextTestRunner(stream=f, verbosity=2)
    #     runner2.run(suite2)
    # suite3 = unittest.TestLoader().loadTestsFromTestCase(TestCase.CPTest)
    # with open('ZGYReport.html', 'wb+') as f:
    #     runner3 = HTMLTestRunner(stream=f,
    #                              title='SCalc',
    #                              description='Generated by 3rd party lib')
    #     runner3.run(suite3)
    # suite=unittest.TestLoader().loadTestsFromTestCase(TestCase.Semantic)
    # unittest.TextTestRunner(verbosity=2).run(suite)


# Regex && Web Scraping
import re
import urllib.request

phonenum='''
Phone number
444-122-1234
123-122-12384
123-123-22
12-1233-1232
'''
name='''
Charlie A
'''
email='''
SSS@gmail.com asdfkadslfhb@gmail.com alsdjf.com alsdkf @ com asdf @.com
'''
str=email
print(str)
vs=re.findall(r"\w{1,20}@\w{2,20}.\w{2,3}", str)
print(vs)

url="https://www.summet.com/dmsi/html/codesamples/addresses.html"
response=urllib.request.urlopen(url)
html=response.read()
str=html.decode()
rst=re.findall(r"\(\d{3}\) \d{3}-\d{4}", str)
c=1
for a in rst[0:3]:
    print(c)
    print(a)
    print(a[0:len(a)-1])
    c+=1
rc=re.compile(r"\(\d{3}\) \d{3}-\d{4}")
print(rc)

a="asdklkfhao"
b="asdkasdkbbbbaaaa"
str=b
rc=re.compile(r"(?P<four>[a-z]{4})", re.X)
print(rc.findall(str))
m=re.match(r"(?P<four>[a-z]{4})(?P=four)(?P<two>[a-z]{4})(?P<three>[a-z]{4})", str)
print(m.groupdict())
print(m.pos)
print(m.start(2))

rc2lf=re.compile(r"(?m)^(?P<int>\d+)(?P<dot>\.)?(?P<frac>(?(dot)\d{1,2}))$", re.X)
strlf='''
1.2
33.2
33.33
123
12341
'''
print(rc2lf.findall(strlf))
print(rc2lf.search(strlf).groupdict())

strhtml='''<a href="http://www.zjmainstay.cn/my-regexp" class="demo8" title="正则三段论应用举例">正则表达式入门教程</a>'''
rgxhtml1='''<a href="(.*?)" class="(.*?)" title="(.*?)">(.*)?<\/a>'''
rgxhtml2='''<a href="(.*?)" class="(.*?)" title="(.*?)">(.*?)</a>'''
rgxhtml3='''<a\ href="(?:.*?)"\ class="(.*?)"\ title="(.*?)">(.*?)</a>'''
rchtml=re.compile(rgxhtml3, re.X)
print(rchtml.findall(strhtml))
print(re.search(rgxhtml3, strhtml))
print(len(strhtml))

rgxexe='''(?m)^(\w+)(?:\.)(?=exe)'''
rgxnexe='''(?m)^(\w+)(?:\.)(?!exe)'''
strexe='''
notexefile1.txt
exefile1.exe
exefile2.exe
exefile3.exe
notexefile2.php
notexefile3.sh
'''
print(re.findall(rgxexe, strexe))

rgxhs='''(?m)^(?:.+=)(?<!name=)(.+)'''
strhs='''
abc name=Zjmainstay
adsf age=26
'''
print(re.findall(rgxhs, strhs))

strnum='''
111111
'''
rgxnum="(?P<one>\d{1})"
rc=re.compile(r'''(?P<one>[1]{1})''', re.X)
print(rc.findall(strnum))


# To debug a regex, remove patterns from right to left and compare to the desired outcome number.


# Data structure
L=[('b',2),('a',1),('c',3),('d',4)]
print(L)
L=sorted(L, key=lambda x:(x[0], x[1]))
print(L)
a={'a':1, 'b':5, 'c':"zz"}
print(a)
a.popitem()
print(a)
def main():
    num = 3 #number of rows
    yh = [[]] * num
    for row in range(len(yh)):
        yh[row] = [None] * (row + 1)
        for col in range(len(yh[row])):
            if col == 0 or col == row:
                yh[row][col] = 1
            else:
                yh[row][col] = yh[row - 1][col] + yh[row - 1][col - 1]
            print(yh[row][col], end='\t')
        print()
if __name__ == '__main__':
    main()